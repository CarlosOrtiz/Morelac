-- --------------------------------------------------------
-- Host:                         191.102.85.226
-- Versión del servidor:         5.7.15-log - MySQL Community Server (GPL)
-- SO del servidor:              Win64
-- HeidiSQL Versión:             10.1.0.5474
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;


-- Volcando estructura de base de datos para bd_morelac
CREATE DATABASE IF NOT EXISTS `bd_morelac` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `bd_morelac`;

-- Volcando estructura para tabla bd_morelac.usuario
CREATE TABLE IF NOT EXISTS `usuario` (
  `ID_USUARIO` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `USU_CORREO_ELECTRONICO` varchar(50) NOT NULL,
  `USU_CONTRASENA` varchar(50) NOT NULL,
  `USU_ESTADO` enum('ACTIVO','INACTIVO') DEFAULT 'INACTIVO',
  `PERSONA_ID_PERSONA` int(11) NOT NULL,
  `ROL_ID_ROL` int(11) DEFAULT NULL,
  PRIMARY KEY (`ID_USUARIO`),
  UNIQUE KEY `CORREO_ELECTRONICO` (`USU_CORREO_ELECTRONICO`),
  UNIQUE KEY `PERSONA_ID_PERSONA` (`PERSONA_ID_PERSONA`),
  KEY `fk_TIPO_USUARIO_PERSONA1_idx` (`PERSONA_ID_PERSONA`),
  KEY `fk_TIPO_USUARIO_ROL1_idx` (`ROL_ID_ROL`),
  CONSTRAINT `fk_TIPO_USUARIO_PERSONA1` FOREIGN KEY (`PERSONA_ID_PERSONA`) REFERENCES `persona` (`ID_PERSONA`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_TIPO_USUARIO_ROL1` FOREIGN KEY (`ROL_ID_ROL`) REFERENCES `rol` (`ID_ROL`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;

-- Volcando datos para la tabla bd_morelac.usuario: ~7 rows (aproximadamente)
/*!40000 ALTER TABLE `usuario` DISABLE KEYS */;
INSERT INTO `usuario` (`ID_USUARIO`, `USU_CORREO_ELECTRONICO`, `USU_CONTRASENA`, `USU_ESTADO`, `PERSONA_ID_PERSONA`, `ROL_ID_ROL`) VALUES
	(1, 'johant.vargas', 'prueba', 'ACTIVO', 1117553549, 1),
	(3, 'carloslosada9901@hotmail.com', 'caol', 'INACTIVO', 17683600, 3),
	(4, 'luis@gmail.com', 'luis', 'INACTIVO', 17683560, 5),
	(5, 'Sofia2000@gmail.com', 'sofia', 'INACTIVO', 40683530, 5),
	(6, 'juan@gmail.com', '1234', 'INACTIVO', 9901, 4),
	(7, 'Luna@gmail.com', 'luna', 'INACTIVO', 4, 5),
	(8, 'Pruea@fs.com', '1234', 'INACTIVO', 3, NULL);
/*!40000 ALTER TABLE `usuario` ENABLE KEYS */;

-- Volcando estructura para procedimiento bd_morelac.CONS_EMPRESA
DELIMITER //
CREATE DEFINER=`user_morelac`@`%` PROCEDURE `CONS_EMPRESA`(
	IN `ID` INT
)
BEGIN
SELECT ID_EMPRESA,EMP_NOMBRE,EMP_DIRECCION,EMP_CORREO,EMP_TELEFONO,EMP_DUENO,EMP_MISION,EMP_VISION,EMP_FOTO 
FROM EMPRESA WHERE empresa.ID_EMPRESA=ID;
END//
DELIMITER ;

-- Volcando estructura para procedimiento bd_morelac.CONS_FINCA
DELIMITER //
CREATE DEFINER=`user_morelac`@`%` PROCEDURE `CONS_FINCA`(
	IN `ID` INT
)
BEGIN
	SELECT ID_FINCA,FIN_NOMBRE,FIN_UBICACION,FIN_DIMENSION,PERSONA_ID_PERSONA FROM finca WHERE finca.ID_FINCA=ID;
END//
DELIMITER ;

-- Volcando estructura para procedimiento bd_morelac.CONS_MENU
DELIMITER //
CREATE DEFINER=`user_morelac`@`%` PROCEDURE `CONS_MENU`(
	IN `ID_P` INT
,
	IN `CORREO` VARCHAR(50)
)
BEGIN
SELECT MENU_NOMBRE,MENU_URL,MENU_ICON,MENU_ORDEN FROM menu
INNER JOIN permiso ON (menu.PERMISO_ID_PERMISO = permiso.ID_PERMISO)
INNER JOIN rol ON ( permiso.ROL_ID_ROL = rol.ID_ROL )
INNER JOIN usuario ON(rol.ID_ROL= usuario.ROL_ID_ROL)
WHERE rol.ID_ROL = ID_P AND usuario.USU_CORREO_ELECTRONICO= CORREO;
END//
DELIMITER ;

-- Volcando estructura para procedimiento bd_morelac.CONS_PERSONA
DELIMITER //
CREATE DEFINER=`user_morelac`@`%` PROCEDURE `CONS_PERSONA`(
	IN `Correo` VARCHAR(100)
)
BEGIN
SELECT PER_NOMBRE1,PER_NOMBRE2,PER_APELLIDO1,PER_APELLIDO2, PER_SEXO,PER_FOTO FROM persona
INNER JOIN usuario ON (persona.ID_PERSONA = usuario.PERSONA_ID_PERSONA)
WHERE usuario.USU_CORREO_ELECTRONICO=Correo ;
END//
DELIMITER ;

-- Volcando estructura para procedimiento bd_morelac.CONS_PRODUCTO
DELIMITER //
CREATE DEFINER=`user_morelac`@`%` PROCEDURE `CONS_PRODUCTO`(
	IN `ID` INT
)
BEGIN
SELECT ID_PRODUCTOS, PRO_NOMBRE,PRO_CANTIDAD,PRO_PRECIO FROM productos
WHERE productos.ID_PRODUCTOS = ID;
END//
DELIMITER ;

-- Volcando estructura para procedimiento bd_morelac.CONS_RESULDADOS_PRUEBA
DELIMITER //
CREATE DEFINER=`user_morelac`@`%` PROCEDURE `CONS_RESULDADOS_PRUEBA`()
BEGIN
SELECT NOMBRE_PRUEBA,DAT_NOMBRE,RES_TOTAL_PRUEBAS,CANTIDAD_PRUEBAS,NOMBRE1, APELLIDO1,ROL_NOMBRE FROM resultados_pruebas
INNER JOIN persona ON (resultados_pruebas.PERSONA_ID_PERSONA=persona.ID_PERSONA)
INNER JOIN aux_prueba ON (resultados_pruebas.ID_RESULTADOS_PRUEBAS=aux_prueba.ID_RESULTADOS_PRUEBAS)
INNER JOIN datos ON(aux_prueba.DATOS_ID_DATOS=datos.ID_DATOS)
INNER JOIN usuario ON ( persona.ID_PERSONA=usuario.PERSONA_ID_PERSONA)
INNER JOIN rol ON (usuario.ROL_ID_ROL=rol.ID_ROL);
END//
DELIMITER ;

-- Volcando estructura para procedimiento bd_morelac.CONS_ROL
DELIMITER //
CREATE DEFINER=`user_morelac`@`%` PROCEDURE `CONS_ROL`(
	IN `CORREO` VARCHAR(100)
)
BEGIN
	SELECT ID_ROL, ROL_NOMBRE FROM rol
	INNER JOIN usuario ON rol.ID_ROL= usuario.ROL_ID_ROL
	WHERE usuario.USU_CORREO_ELECTRONICO= CORREO;
END//
DELIMITER ;

-- Volcando estructura para procedimiento bd_morelac.CONS_ROL_ALL
DELIMITER //
CREATE DEFINER=`user_morelac`@`%` PROCEDURE `CONS_ROL_ALL`()
BEGIN
	SELECT ID_ROL AS ID, ROL_NOMBRE AS NOMBRE FROM rol;
END//
DELIMITER ;

-- Volcando estructura para procedimiento bd_morelac.CONS_USUARIO
DELIMITER //
CREATE DEFINER=`user_morelac`@`%` PROCEDURE `CONS_USUARIO`(
	IN `CORREO` VARCHAR(50),
	IN `CONTRASENA` VARCHAR(50)
)
BEGIN	
	IF ((SELECT COUNT(USU_CORREO_ELECTRONICO) FROM usuario WHERE CORREO = USU_CORREO_ELECTRONICO)=0) THEN
		CALL SHOW_MENSAJE('1', '¡Error! Su usuario o contraseña son incorrectos.');
	ELSEIF ((SELECT COUNT(USU_CORREO_ELECTRONICO) FROM usuario WHERE CORREO = USU_CORREO_ELECTRONICO AND USU_CONTRASENA = CONTRASENA)=0) THEN
		CALL SHOW_MENSAJE('1', '¡Error! Su usuario o contraseña son incorrectos.');
	ELSEIF ((SELECT COUNT(USU_CORREO_ELECTRONICO) FROM usuario WHERE CORREO = USU_CORREO_ELECTRONICO AND USU_ESTADO = 'ACTIVO')=0) THEN
		CALL SHOW_MENSAJE('1', '¡Error! Su cuenta se encuentra inactiva.');
	ELSE
		CALL SHOW_MENSAJE('3', 'Acceso permitido.');
	END IF;
	
END//
DELIMITER ;

-- Volcando estructura para procedimiento bd_morelac.INSE_EMPRESA
DELIMITER //
CREATE DEFINER=`user_morelac`@`%` PROCEDURE `INSE_EMPRESA`(
	IN `NOM` VARCHAR(45),
	IN `DIRE` VARCHAR(160),
	IN `CORREO` VARCHAR(160),
	IN `TELE` VARCHAR(10),
	IN `DUENO` VARCHAR(50),
	IN `MISION` VARCHAR(500),
	IN `VISION` VARCHAR(500),
	IN `FOTO` VARCHAR(500)

)
BEGIN

	DECLARE ID_EMP INT;
	
	IF ((SELECT COUNT(empresa.ID_EMPRESA) FROM empresa)=0) THEN

	INSERT INTO empresa (ID_EMPRESA,EMP_NOMBRE,EMP_DIRECCION,EMP_CORREO,EMP_TELEFONO,EMP_DUENO,EMP_MISION,EMP_VISION,EMP_FOTO)
   VALUES (1,NOM,DIRE,CORREO,TELE,DUENO,MISION,VISION,FOTO);

  ELSE
	
	SET ID_EMP = (SELECT MAX(empresa.ID_EMPRESA ) FROM empresa)+1;
   
	INSERT INTO empresa (ID_EMPRESA,EMP_NOMBRE,EMP_DIRECCION,EMP_CORREO,EMP_TELEFONO,EMP_DUENO,EMP_MISION,EMP_VISION,EMP_FOTO)
   VALUES (NOM,DIRE,CORREO,TELE,DUENO,MISION,VISION,FOTO);
 
 END IF;

END//
DELIMITER ;

-- Volcando estructura para procedimiento bd_morelac.INSE_FINCA
DELIMITER //
CREATE DEFINER=`user_morelac`@`%` PROCEDURE `INSE_FINCA`(
	IN `F_NOMBRE` VARCHAR(50),
	IN `F_UBICACION` VARCHAR(50),
	IN `F_DIMENSION` VARCHAR(50),
	IN `IDPERSONA` INT


)
BEGIN

	DECLARE ID_FIN INT;
	
	IF ((SELECT COUNT(finca.ID_FINCA) FROM finca)=0) THEN

	INSERT INTO finca (ID_FINCA, FIN_NOMBRE,FIN_UBICACION, FIN_DIMENSION,PERSONA_ID_PERSONA)
   VALUES (1,F_NOMBRE,F_UBICACION,F_DIMENSION,IDPERSONA);

  ELSE
	
	SET ID_FIN = (SELECT MAX(finca.ID_FINCA ) FROM finca)+1;
   
	INSERT INTO finca (ID_FINCA, FIN_NOMBRE,FIN_UBICACION, FIN_DIMENSION,PERSONA_ID_PERSONA)
   VALUES (ID_FIN, F_NOMBRE,F_UBICACION,F_DIMENSION,IDPERSONA);
 
 END IF;

END//
DELIMITER ;

-- Volcando estructura para procedimiento bd_morelac.INSE_PERSONA
DELIMITER //
CREATE DEFINER=`user_morelac`@`%` PROCEDURE `INSE_PERSONA`(
	IN `NOM1` VARCHAR(50),
	IN `NOM2` VARCHAR(50),
	IN `APE1` VARCHAR(50),
	IN `APE2` VARCHAR(50),
	IN `CELU` INT,
	IN `FECHA` VARCHAR(50),
	IN `DIRE` VARCHAR(50),
	IN `DETALLE` VARCHAR(255),
	IN `SEXO` ENUM('ACTIVO','INACTIVO'),
	IN `FOTO` VARCHAR(200)
)
BEGIN

	DECLARE ID_PERSO INT;
	
   DECLARE EXIT HANDLER FOR SQLEXCEPTION
	CALL SHOW_MENSAJE('1', '¡Ha ocurrido un error en el registro de los datos!');
 	
	DECLARE EXIT HANDLER FOR 1062
	CALL SHOW_MENSAJE('1', '¡Error! La persona ya se encuentra registrada.');
		
 	START TRANSACTION;
	
	IF ((SELECT COUNT(persona.ID_PERSONA) FROM persona)=0) THEN
 
	INSERT INTO empresa (ID_PERSONA,PER_NOMBRE1,PER_NOMBRE2,PER_APELLIDO1,PER_APELLIDO2,PER_CELULAR,PER_FECHA_NACIMIENTO,PER_DIRRECCION,PER_DETALLES,PER_SEXO,PER_FOTO)
   VALUES (1,NOM1,NOM2,APE1,APE2,CELU,FECHA,DIRE,DETALLE,SEXO,FOTO);
		
  ELSE
	
	SET ID_PERSO = (SELECT MAX(persona.ID_PERSONA  ) FROM persona)+1;
   
	INSERT INTO persona (ID_PERSONA,PER_NOMBRE1,PER_NOMBRE2,PER_APELLIDO1,PER_APELLIDO2,PER_CELULAR,PER_FECHA_NACIMIENTO,PER_DIRRECCION,PER_DETALLES,PER_SEXO,PER_FOTO)
   VALUES (NOM1,NOM2,APE1,APE2,CELU,FECHA,DIRE,DETALLE,SEXO,FOTO);
   
	CALL SHOW_MENSAJE('3', 'Datos ingresados correctamente. Los revisaremos para poder completar su registro y se lo notificaremos a su correo.');	
	
 END IF;

END//
DELIMITER ;

-- Volcando estructura para procedimiento bd_morelac.INSE_PRODUCTO
DELIMITER //
CREATE DEFINER=`user_morelac`@`%` PROCEDURE `INSE_PRODUCTO`(
	IN `NOMBRE` VARCHAR(50),
	IN `CANTIDAD` INT,
	IN `PRECIO` DOUBLE
)
BEGIN
DECLARE ID_PRO INT;
	
	IF ((SELECT COUNT(productos.ID_PRODUCTOS) FROM productos)=0) THEN

	INSERT INTO productos (ID_PRODUCTOS, PRO_NOMBRE,PRO_CANTIDAD, PRO_PRECIO)
   VALUES (1,NOMBRE,CANTIDAD,PRECIO);

  ELSE
	
	SET ID_PRO = (SELECT MAX(productos.ID_PRODUCTOS ) FROM productos)+1;
   
	INSERT INTO productos(ID_PRODUCTOS, PRO_NOMBRE,PRO_CANTIDAD, PRO_PRECIO)
   VALUES (ID_PRO,NOMBRE,CANTIDAD,PRECIO);
	
	END IF;
END//
DELIMITER ;

-- Volcando estructura para procedimiento bd_morelac.INSE_ROL
DELIMITER //
CREATE DEFINER=`user_morelac`@`%` PROCEDURE `INSE_ROL`(
	IN `NOMBRE` VARCHAR(50)
)
BEGIN

	DECLARE ID_RO INT;
	
	IF  ((SELECT COUNT(rol.ID_ROL) FROM rol) = 0) THEN
		
		INSERT INTO rol (ID_ROL, ROL_NOMBRE)
		VALUES (1, NOMBRE);
		
	ELSE		
	
		SET ID_RO = (SELECT MAX(rol.ID_ROL) FROM rol)+1;
		
		INSERT INTO rol (ID_ROL, ROL_NOMBRE)
		VALUES (ID_RO, NOMBRE);
		
	END IF;
END//
DELIMITER ;

-- Volcando estructura para procedimiento bd_morelac.INSE_USUARIO
DELIMITER //
CREATE DEFINER=`user_morelac`@`%` PROCEDURE `INSE_USUARIO`(
	IN `CORREO` VARCHAR(50),
	IN `CONTRA` VARCHAR(50),
	IN `IDPERSONA` INT


)
BEGIN

	DECLARE ID_US INT;	
	
	IF  ((SELECT COUNT(usuario.ID_USUARIO) FROM usuario) = 0) THEN
		
		INSERT INTO usuario (ID_USUARIO, USU_CORREO_ELECTRONICO, USU_CONTRASENA, PERSONA_ID_PERSONA)
		VALUES (1, CORREO, CONTRA, IDPERSONA);
		
	ELSE		
	
		SET ID_US = (SELECT MAX(usuario.ID_USUARIO) FROM usuario)+1;
		
		INSERT INTO usuario (ID_USUARIO, USU_CORREO_ELECTRONICO, USU_CONTRASENA, PERSONA_ID_PERSONA)
		VALUES (ID_US, CORREO, CONTRA, IDPERSONA);
		
	END IF;
END//
DELIMITER ;

-- Volcando estructura para procedimiento bd_morelac.SHOW_MENSAJE
DELIMITER //
CREATE DEFINER=`user_morelac`@`%` PROCEDURE `SHOW_MENSAJE`(
	IN `TIPO` VARCHAR(1),
	IN `MENSAJE` VARCHAR(1000)
)
BEGIN
	SELECT TIPO AS 'TIPO', MENSAJE AS 'MENSAJE';
END//
DELIMITER ;

-- Volcando estructura para procedimiento bd_morelac.UPDA_EMPRESA
DELIMITER //
CREATE DEFINER=`user_morelac`@`%` PROCEDURE `UPDA_EMPRESA`()
BEGIN

END//
DELIMITER ;

-- Volcando estructura para procedimiento bd_morelac.UPDA_FINCA
DELIMITER //
CREATE DEFINER=`user_morelac`@`%` PROCEDURE `UPDA_FINCA`(
	IN `ID` INT
,
	IN `NOMBRE` INT,
	IN `UBICACION` INT,
	IN `DIME` INT
)
BEGIN
	UPDATE finca
	SET FIN_NOMBRE = NOMBRE,
	FIN_UBICACION = UBICACION,
	FIN_DIMENSION = DIME
	WHERE finca.ID_FINCA = ID;
END//
DELIMITER ;

-- Volcando estructura para procedimiento bd_morelac.UPDA_PERSONA
DELIMITER //
CREATE DEFINER=`user_morelac`@`%` PROCEDURE `UPDA_PERSONA`(
	IN `ID` INT,
	IN `NOM1` VARCHAR(50),
	IN `NOM2` VARCHAR(50),
	IN `APE1` VARCHAR(50),
	IN `APE2` VARCHAR(50),
	IN `CELU` VARCHAR(10),
	IN `F_NACIMIENTO` VARCHAR(50),
	IN `DIREC` VARCHAR(50),
	IN `DETA` VARCHAR(50),
	IN `SEXO1` ENUM('F','M'),
	IN `CONTRA` VARCHAR(50)
)
BEGIN
	
	UPDATE persona 
	SET NOMBRE1 = NOM1,
	NOMBRE2 = NOM2,
	APELLIDO1 = APE1,
	APELLIDO2 = APE2,
	CELULAR=CELU,
	NACIMIENTO = F_NACIMIENTO,
	DIRECCION = DIREC,
	DETALLES = DETA,
	SEXO = SEXO1
	WHERE PERSONA.ID_PERSONA = ID;
	
	CALL `UPDA_USUARIO`(ID, CONTRA,FOTO,ROLL); -- ESTADO
	
END//
DELIMITER ;

-- Volcando estructura para procedimiento bd_morelac.UPDA_USUARIO
DELIMITER //
CREATE DEFINER=`user_morelac`@`%` PROCEDURE `UPDA_USUARIO`(
	IN `ID` INT,
	IN `CONTRA` VARCHAR(50),
	IN `ESTADO` ENUM('ACTIVO','INACTIVO'),
	IN `ROLL` INT


)
BEGIN
	UPDATE usuario 
	SET USU_CONTRASENA = CONTRA,
	USU_ESTADO = ESTADO,
	ROL_ID_ROL = ROLL
	WHERE usuario.ID_USUARIO = ID;
END//
DELIMITER ;

/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
